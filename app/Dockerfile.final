FROM --platform=linux/amd64 cpu64/kath:files AS files

FROM nvidia/cuda:12.9.1-base-ubuntu24.04

COPY --chmod=644 --link --from=files /hg38.fa /
COPY --chmod=644 --link --from=files /revel_with_transcript_ids.db /
COPY --chmod=644 --link --from=files /hg19ToHg38.over.chain.gz /root/.pyliftover/
COPY --chmod=644 --link --from=files /packages.mozilla.org.asc /etc/apt/keyrings/

# Setup Mozilla APT repository for Firefox
RUN echo "deb [signed-by=/etc/apt/keyrings/packages.mozilla.org.asc] https://packages.mozilla.org/apt mozilla main" > /etc/apt/sources.list.d/mozilla.list && \
    echo "Package: *\nPin: origin packages.mozilla.org\nPin-Priority: 1000\n\nPackage: firefox*\nPin: release o=Ubuntu\nPin-Priority: -1" > /etc/apt/preferences.d/mozilla

RUN apt-get update && \
    apt-get install python3.12 python3-pip redis-server firefox wget ca-certificates -y --no-install-recommends && \
    rm -rf /var/lib/apt/lists/*

RUN ARCH=$(uname -m) && \
    echo "Detected architecture: $ARCH" && \
    if [ "$ARCH" = "x86_64" ]; then \
        GECKO_URL="https://github.com/mozilla/geckodriver/releases/download/v0.36.0/geckodriver-v0.36.0-linux32.tar.gz"; \
    elif [ "$ARCH" = "aarch64" ]; then \
        GECKO_URL="https://github.com/mozilla/geckodriver/releases/download/v0.36.0/geckodriver-v0.36.0-linux-aarch64.tar.gz"; \
    else \
        echo "Unsupported architecture: $ARCH" && exit 1; \
    fi && \
    echo "Downloading from $GECKO_URL" && \
    wget "$GECKO_URL" -O /tmp/geckodriver.tar.gz && \
    tar -xzf /tmp/geckodriver.tar.gz -C /usr/local/bin/ && \
    chmod +x /usr/local/bin/geckodriver && \
    rm /tmp/geckodriver.tar.gz

ARG APP_DIR="/kath/app"

WORKDIR ${APP_DIR}

COPY --link ./back_end/requirements.txt .
RUN MAKEFLAGS="-j$(nproc)" pip install --no-cache-dir --break-system-packages --root-user-action ignore -r ./requirements.txt

RUN wget -qO- https://deb.nodesource.com/setup_24.x | bash - && \
    apt-get update && \
    apt-get install -y nodejs && \
    node -v && npm -v

COPY --link ./front_end/package.json .
RUN npm install && mv ./node_modules /

RUN mkdir -p ${APP_DIR}/back_end/src/workspace/fasta/ && \
    ln -sf /hg38.fa ${APP_DIR}/back_end/src/workspace/fasta/hg38.fa && \
    mkdir -p ${APP_DIR}/back_end/src/workspace/revel/ && \
    ln -sf /revel_with_transcript_ids.db ${APP_DIR}/back_end/src/workspace/revel/revel_with_transcript_ids.db

COPY . .

EXPOSE 5173
EXPOSE 8080

ENTRYPOINT ["./run.sh"]
